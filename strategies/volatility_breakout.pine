//@version=5
strategy("Volatility Breakout Strategy", overlay=true, initial_capital=10000, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// Input parameters
atrPeriod = input.int(14, "ATR Period", minval=1)
volatilityPeriod = input.int(20, "Volatility Period", minval=1)
volatilityThreshold = input.float(1.5, "Volatility Threshold", minval=1.0, step=0.1)
atrMultiplier = input.float(2.0, "ATR Multiplier", minval=0.1, step=0.1)
stopLossMultiplier = input.float(3.0, "Stop Loss ATR Multiplier", minval=0.1, step=0.1)

// Calculate indicators
atr = ta.atr(atrPeriod)
volatility = ta.stdev(close, volatilityPeriod)
volatilityMA = ta.sma(volatility, volatilityPeriod)
isVolatilityExpanding = volatility > (volatilityMA * volatilityThreshold)

// Calculate Bollinger Bands for additional confirmation
bbLength = 20
bbMult = 2.0
[bbMiddle, bbUpper, bbLower] = ta.bb(close, bbLength, bbMult)

// Entry conditions
longCondition = isVolatilityExpanding and close > bbUpper
shortCondition = isVolatilityExpanding and close < bbLower

// Calculate stop loss and take profit levels
longStopLoss = close - (atr * stopLossMultiplier)
shortStopLoss = close + (atr * stopLossMultiplier)

longTakeProfit = close + (atr * atrMultiplier)
shortTakeProfit = close - (atr * atrMultiplier)

// Execute trades
if (longCondition)
    strategy.entry("Long", strategy.long)
    strategy.exit("Long Exit", "Long", stop=longStopLoss, limit=longTakeProfit)

if (shortCondition)
    strategy.entry("Short", strategy.short)
    strategy.exit("Short Exit", "Short", stop=shortStopLoss, limit=shortTakeProfit)

// Plotting
plot(bbUpper, "BB Upper", color=color.red, linewidth=1)
plot(bbLower, "BB Lower", color=color.green, linewidth=1)
plot(bbMiddle, "BB Middle", color=color.blue, linewidth=1) 