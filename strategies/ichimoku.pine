//@version=5
strategy("Ichimoku Cloud Strategy", overlay=true, initial_capital=10000, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// Input parameters
tenkanPeriod = input.int(9, "Tenkan Period", minval=1)
kijunPeriod = input.int(26, "Kijun Period", minval=1)
senkouSpanBPeriod = input.int(52, "Senkou Span B Period", minval=1)
atrPeriod = input.int(14, "ATR Period", minval=1)
atrMultiplier = input.float(2.0, "ATR Multiplier", minval=0.1, step=0.1)
stopLossMultiplier = input.float(3.0, "Stop Loss ATR Multiplier", minval=0.1, step=0.1)

// Calculate indicators
tenkan = (ta.highest(high, tenkanPeriod) + ta.lowest(low, tenkanPeriod)) / 2
kijun = (ta.highest(high, kijunPeriod) + ta.lowest(low, kijunPeriod)) / 2
senkouSpanA = (tenkan + kijun) / 2
senkouSpanB = (ta.highest(high, senkouSpanBPeriod) + ta.lowest(low, senkouSpanBPeriod)) / 2
atr = ta.atr(atrPeriod)

// Entry conditions
longCondition = close > senkouSpanA and close > senkouSpanB and tenkan > kijun
shortCondition = close < senkouSpanA and close < senkouSpanB and tenkan < kijun

// Calculate stop loss and take profit levels
longStopLoss = close - (atr * stopLossMultiplier)
shortStopLoss = close + (atr * stopLossMultiplier)

longTakeProfit = close + (atr * atrMultiplier)
shortTakeProfit = close - (atr * atrMultiplier)

// Execute trades
if (longCondition)
    strategy.entry("Long", strategy.long)
    strategy.exit("Long Exit", "Long", stop=longStopLoss, limit=longTakeProfit)

if (shortCondition)
    strategy.entry("Short", strategy.short)
    strategy.exit("Short Exit", "Short", stop=shortStopLoss, limit=shortTakeProfit)

// Plotting
plot(tenkan, "Tenkan", color=color.blue, linewidth=1)
plot(kijun, "Kijun", color=color.red, linewidth=1)
plot(senkouSpanA, "Senkou Span A", color=color.green, linewidth=1)
plot(senkouSpanB, "Senkou Span B", color=color.red, linewidth=1) 