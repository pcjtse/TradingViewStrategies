//@version=5
strategy("Stochastic Oscillator Strategy", overlay=true, initial_capital=10000, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// Input parameters
kLength = input.int(14, "K Length", minval=1)
dLength = input.int(3, "D Length", minval=1)
overboughtLevel = input.int(80, "Overbought Level", minval=50, maxval=100)
oversoldLevel = input.int(20, "Oversold Level", minval=0, maxval=50)
atrPeriod = input.int(14, "ATR Period", minval=1)
atrMultiplier = input.float(2.0, "ATR Multiplier", minval=0.1, step=0.1)
stopLossMultiplier = input.float(3.0, "Stop Loss ATR Multiplier", minval=0.1, step=0.1)

// Calculate indicators
[k, d] = ta.stoch(close, high, low, kLength)
atr = ta.atr(atrPeriod)

// Entry conditions
longCondition = k < oversoldLevel and d < oversoldLevel and ta.crossover(k, d)
shortCondition = k > overboughtLevel and d > overboughtLevel and ta.crossunder(k, d)

// Calculate stop loss and take profit levels
longStopLoss = close - (atr * stopLossMultiplier)
shortStopLoss = close + (atr * stopLossMultiplier)

longTakeProfit = close + (atr * atrMultiplier)
shortTakeProfit = close - (atr * atrMultiplier)

// Execute trades
if (longCondition)
    strategy.entry("Long", strategy.long)
    strategy.exit("Long Exit", "Long", stop=longStopLoss, limit=longTakeProfit)

if (shortCondition)
    strategy.entry("Short", strategy.short)
    strategy.exit("Short Exit", "Short", stop=shortStopLoss, limit=shortTakeProfit)

// Plotting
plot(k, "K", color=color.blue, linewidth=1)
plot(d, "D", color=color.red, linewidth=1)
hline(overboughtLevel, "Overbought", color=color.red, linestyle=hline.style_dashed)
hline(oversoldLevel, "Oversold", color=color.green, linestyle=hline.style_dashed) 