//@version=5
strategy("Volume Profile Strategy", overlay=true, initial_capital=10000, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// Input parameters
volumeProfilePeriod = input.int(20, "Volume Profile Period", minval=1)
volumeThreshold = input.float(1.5, "Volume Threshold", minval=1.0, step=0.1)
atrPeriod = input.int(14, "ATR Period", minval=1)
atrMultiplier = input.float(2.0, "ATR Multiplier", minval=0.1, step=0.1)
stopLossMultiplier = input.float(3.0, "Stop Loss ATR Multiplier", minval=0.1, step=0.1)

// Calculate indicators
volumeMA = ta.sma(volume, volumeProfilePeriod)
isHighVolume = volume > (volumeMA * volumeThreshold)
atr = ta.atr(atrPeriod)

// Calculate price levels
priceLevels = array.new_float(0)
for i = 0 to volumeProfilePeriod - 1
    array.push(priceLevels, close[i])

// Entry conditions
longCondition = isHighVolume and close > ta.sma(close, 20) and close > array.get(priceLevels, array.size(priceLevels) - 1)
shortCondition = isHighVolume and close < ta.sma(close, 20) and close < array.get(priceLevels, array.size(priceLevels) - 1)

// Calculate stop loss and take profit levels
longStopLoss = close - (atr * stopLossMultiplier)
shortStopLoss = close + (atr * stopLossMultiplier)

longTakeProfit = close + (atr * atrMultiplier)
shortTakeProfit = close - (atr * atrMultiplier)

// Execute trades
if (longCondition)
    strategy.entry("Long", strategy.long)
    strategy.exit("Long Exit", "Long", stop=longStopLoss, limit=longTakeProfit)

if (shortCondition)
    strategy.entry("Short", strategy.short)
    strategy.exit("Short Exit", "Short", stop=shortStopLoss, limit=shortTakeProfit)

// Plotting
plot(volumeMA, "Volume MA", color=color.blue, linewidth=1)
plot(volume, "Volume", style=plot.style_histogram, color=color.gray) 